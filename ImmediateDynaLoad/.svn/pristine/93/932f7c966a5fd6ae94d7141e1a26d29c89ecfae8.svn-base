package org.power.dynaload.startup;

import java.io.File;
import java.io.IOException;

import org.power.dynaload.registry.ServiceRegistry;

/**
 * 启动类.
 * @author li.zhang
 * 2014-9-12
 *
 */
public class Startup
{
    /** 配置信息. **/
    private Config config;
    
    /**
     * 系统启动.
     * @throws IOException 
     */
    public void start() throws IOException
    {
        //1.加载启动配置.
        initConfig();
        
        //2.创建代码动态加载的树图.
        loadDyncServcies();
    }

    /**
     * 初始化配置.
     */
    private void initConfig()
    {
        Config conf = new Config();
        conf.setDyncodePath("dyncode");//默认,dyncode目录下的代码是支持动态加载的.
        
        this.config = conf;
    }

    /**
     * 加载动态服务.
     * @throws IOException 
     */
    private void loadDyncServcies() throws IOException
    {
        String dyncodePath = this.config.getDyncodePath();
        File dyncodeDir = new File(dyncodePath);
        if (!dyncodeDir.exists() || !dyncodeDir.isDirectory())
        {
            return;
        }
        
        transvalDirectory(dyncodeDir, new File(dyncodePath));
    }

    /**
     * 遍历目录.
     * @param dir dir
     * @param according 参照目录.
     * @throws IOException 
     */
    private void transvalDirectory(File dir, File according) throws IOException
    {
        File[] children = dir.listFiles();
        if (null == children || 0 == children.length)
        {
            return;
        }
        
        for (int i = 0; i < children.length; i++)
        {
            File child = children[i];
            if (child.isDirectory())
            {
                transvalDirectory(child, according);
            }
            else
            {
                if (child.isFile() && child.getName().endsWith(".java"))
                {
                    doTransvalOperation(child, according);
                }
            }
        }
    }

    private void doTransvalOperation(File child, File according)
    {
        String relativePath = relativePath(child, according);
        relativePath = relativePath.replaceAll("\\\\", ".");
        String servClassName = relativePath.substring(0, relativePath.lastIndexOf(".java"));
        
        ServiceRegistry registry = ServiceRegistry.getInstance();
        registry.addDyncService(servClassName);
    }

    /**
     * 
     * @param file 文件.
     * @param parentDir 参照文件,可能是上一级或者上上一级的父目录
     * @return
     */
    private String relativePath(File file, File parentDir)
    {
        String relativePath = null;
        relativePath = file.getAbsolutePath().substring(parentDir.getAbsolutePath().length() + 1);
        return relativePath;
    }

    public Config getConfig()
    {
        return config;
    }
}
